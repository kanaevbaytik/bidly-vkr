//
//  MyBidsViewController.swift
//  Bidly
//MyBidsViewController
//  Created by Baytik  on 9/3/25.
//

import UIKit

class MyBidsViewController: UIViewController {
    
//MARK: -UI —ç–ª–µ–º–µ–Ω—Ç—ã
    private let uploadButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ—Ç", for: .normal)
        button.backgroundColor = UIColor.systemPurple
        button.setTitleColor(.white, for: .normal)
        button.layer.cornerRadius = 12
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()

    private let activityIndicator: UIActivityIndicatorView = {
        let indicator = UIActivityIndicatorView(style: .large)
        indicator.color = .systemPurple
        indicator.translatesAutoresizingMaskIntoConstraints = false
        indicator.hidesWhenStopped = true
        return indicator
    }()
    //MARK: - –∂–∏–∑–µ–Ω–Ω—ã–π —Ü–∏–∫–ª

    override func viewDidLoad() {
        super.viewDidLoad()
        print("üîß viewDidLoad –≤—ã–∑–≤–∞–Ω")
        view.backgroundColor = .white
        layout()
        uploadButton.addTarget(self, action: #selector(uploadButtonTapped), for: .touchUpInside)
    }

    //MARK: -–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI

    private func layout() {
        print("üîß layout –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        view.addSubview(uploadButton)
        view.addSubview(activityIndicator)

        NSLayoutConstraint.activate([
            uploadButton.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            uploadButton.centerYAnchor.constraint(equalTo: view.centerYAnchor),
            uploadButton.heightAnchor.constraint(equalToConstant: 50),
            uploadButton.widthAnchor.constraint(equalToConstant: 200),

            activityIndicator.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            activityIndicator.topAnchor.constraint(equalTo: uploadButton.bottomAnchor, constant: 24)
        ])
    }
    //MARK: -–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É

    @objc private func uploadButtonTapped() {
        print("üì§ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–∞—Ç–∞")
        activityIndicator.startAnimating()
        uploadButton.isEnabled = false

        print("üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏...")
        // let image = UIImage(named: "example") // –ü–æ–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        let fakeImage = UIImage() // –û—Ç–ø—Ä–∞–≤–∏–º –ø—É—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ç.–∫. API —Ç—Ä–µ–±—É–µ—Ç –µ–≥–æ

        print("üì° –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")

        TestUploadService.shared.uploadLotWithImage(
            title: "–ü—Ä–∏–º–µ—Ä –ª–æ—Ç–∞",
            category: "–û–¥–µ–∂–¥–∞",
            startPrice: 15000,
            minBidStep: 500,
            image: fakeImage,
            imageFilename: "lot-test.jpeg"
        ) { result in
            DispatchQueue.main.async {
                print("üì¨ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
                self.activityIndicator.stopAnimating()
                self.uploadButton.isEnabled = true

                switch result {
                case .success(let response):
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ: \(response)")
                    self.showAlert(title: "–£—Å–ø–µ—à–Ω–æ", message: "–õ–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–û—Ç–≤–µ—Ç: \(response)")
                case .failure(let error):
                    print("‚ùå –û—à–∏–±–∫–∞: \(error.localizedDescription)")
                    self.showAlert(title: "–û—à–∏–±–∫–∞", message: error.localizedDescription)
                }
            }
        }
    }

    private func showAlert(title: String, message: String) {
        print("üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è alert: \(title)")
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "–û–ö", style: .default))
        present(alert, animated: true)
    }
}

